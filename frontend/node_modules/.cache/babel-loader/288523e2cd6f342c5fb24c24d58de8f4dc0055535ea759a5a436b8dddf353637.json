{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mah_b\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Monolith_SpringBoot_React-main\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  fetchTasks,\n  setError\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [formError, setFormError] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      await axios.post('/api/tasks', {\n        title,\n        description\n      }, {\n        auth: {\n          username: 'admin',\n          password: 'admin'\n        }\n      });\n      setTitle('');\n      setDescription('');\n      fetchTasks(); // Atualize a lista de tarefas após a criação\n      setFormError(null); // Limpar qualquer erro anterior\n      setError(null); // Limpar qualquer erro anterior\n    } catch (error) {\n      console.error('Error creating task', error);\n      setFormError('Failed to create task.');\n      setError('Failed to create task.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), formError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: formError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"g8cQhdSa6q+dNc22uD9iBQpyYQE=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TaskForm","fetchTasks","setError","_s","title","setTitle","description","setDescription","formError","setFormError","handleSubmit","event","preventDefault","post","auth","username","password","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/mah_b/OneDrive/Área de Trabalho/Monolith_SpringBoot_React-main/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst TaskForm = ({ fetchTasks, setError }) => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [formError, setFormError] = useState(null);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            await axios.post('/api/tasks',\n                { title, description },\n                { auth: { username: 'admin', password: 'admin' } }\n            );\n            setTitle('');\n            setDescription('');\n            fetchTasks(); // Atualize a lista de tarefas após a criação\n            setFormError(null); // Limpar qualquer erro anterior\n            setError(null); // Limpar qualquer erro anterior\n        } catch (error) {\n            console.error('Error creating task', error);\n            setFormError('Failed to create task.');\n            setError('Failed to create task.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>Create Task</h2>\n            {formError && <div className=\"error\">{formError}</div>}\n            <div>\n                <label>Title</label>\n                <input\n                    type=\"text\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    required\n                />\n            </div>\n            <div>\n                <label>Description</label>\n                <input\n                    type=\"text\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    required\n                />\n            </div>\n            <button type=\"submit\">Create</button>\n        </form>\n    );\n};\n\nexport default TaskForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}