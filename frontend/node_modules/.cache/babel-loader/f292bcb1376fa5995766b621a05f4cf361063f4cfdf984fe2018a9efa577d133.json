{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mah_b\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Monolith_SpringBoot_React-main\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport EditTaskForm from './EditTaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  fetchTasks,\n  setError\n}) => {\n  _s();\n  const [editing, setEditing] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [listError, setListError] = useState(null);\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`/api/tasks/${id}`, {\n        auth: {\n          username: 'admin',\n          password: 'admin'\n        }\n      });\n      fetchTasks();\n      setListError(null); // Limpar qualquer erro anterior\n      setError(null); // Limpar qualquer erro anterior\n    } catch (error) {\n      console.error('Error deleting task', error);\n      setListError('Failed to delete task.');\n      setError('Failed to delete task.');\n    }\n  };\n  const editTask = task => {\n    setCurrentTask(task);\n    setEditing(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), listError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: listError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 27\n    }, this), editing ? /*#__PURE__*/_jsxDEV(EditTaskForm, {\n      task: currentTask,\n      fetchTasks: fetchTasks,\n      setEditing: setEditing,\n      setError: setError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [task.title, \": \", task.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editTask(task),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"Z8n2Nfi6tBwYAayL4ILiwUz9R4A=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","axios","EditTaskForm","jsxDEV","_jsxDEV","TaskList","tasks","fetchTasks","setError","_s","editing","setEditing","currentTask","setCurrentTask","listError","setListError","deleteTask","id","delete","auth","username","password","error","console","editTask","task","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","title","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mah_b/OneDrive/Área de Trabalho/Monolith_SpringBoot_React-main/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport EditTaskForm from './EditTaskForm';\n\nconst TaskList = ({ tasks, fetchTasks, setError }) => {\n    const [editing, setEditing] = useState(false);\n    const [currentTask, setCurrentTask] = useState(null);\n    const [listError, setListError] = useState(null);\n\n    const deleteTask = async (id) => {\n        try {\n            await axios.delete(`/api/tasks/${id}`, {\n                auth: { username: 'admin', password: 'admin' }\n            });\n            fetchTasks();\n            setListError(null); // Limpar qualquer erro anterior\n            setError(null); // Limpar qualquer erro anterior\n        } catch (error) {\n            console.error('Error deleting task', error);\n            setListError('Failed to delete task.');\n            setError('Failed to delete task.');\n        }\n    };\n\n    const editTask = (task) => {\n        setCurrentTask(task);\n        setEditing(true);\n    };\n\n    return (\n        <div>\n            <h2>Tasks</h2>\n            {listError && <div className=\"error\">{listError}</div>}\n            {editing ? (\n                <EditTaskForm\n                    task={currentTask}\n                    fetchTasks={fetchTasks}\n                    setEditing={setEditing}\n                    setError={setError}\n                />\n            ) : (\n                <ul>\n                    {tasks.map(task => (\n                        <li key={task.id}>\n                            <span>{task.title}: {task.description}</span>\n                            <button onClick={() => deleteTask(task.id)}>Delete</button>\n                            <button onClick={() => editTask(task)}>Edit</button>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default TaskList;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}